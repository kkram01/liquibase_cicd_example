name: Continuous Integration (CI) Build

on:
  pull_request:
    branches: [develop, main]
    types: [opened, reopened, synchronize]
  push:
    branches: [develop, main]
  workflow_dispatch:

jobs:
  qa-liquibase-update:
    name: QA Liquibase plan and Update
    if: github.ref_name == 'main'
    uses: ./.github/workflows/liquibase-ci.yml
    secrets:
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      USERNAME: ${{ secrets.USERNAME }}
    with:
      environment: 'qa'
      runner: 'ubuntu-latest'
  qa-docker:
    name: QA docker deploy
    needs: qa-liquibase-update
    if: github.ref_name == 'main' && needs.qa-liquibase-update.result == 'success'
    uses: ./.github/workflows/_deployment.yaml
    permissions:
      id-token: write
      contents: read
      actions: read
      security-events: write
    with:
      environment: 'qa'
    secrets: inherit
  qa-liquibase-rollback:
    name: QA liquibase rollback
    runs-on: ubuntu-latest
    if: failure() || cancelled()
    needs: [qa-liquibase-update, qa-docker]
    steps:
    - name: test rollback
      run: |-
       echo "runs rollback just fine!"

  dev-liquibase-update:
    name: DEV Liquibase plan and Update
    if: github.ref_name  == 'develop'
    uses: ./.github/workflows/liquibase-ci.yml
    secrets:
      SERVICE_ACCOUNT: ${{ secrets.SERVICE_ACCOUNT }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}
      USERNAME: ${{ secrets.USERNAME }}
    with:
      environment: 'dev'
      runner: 'ubuntu-latest'
  dev-docker:
    name: DEV docker deploy
    needs: dev-liquibase-update
    if: github.ref_name == 'develop'
    uses: ./.github/workflows/_deployment.yaml
    permissions:
      id-token: write
      contents: read
      actions: read
      security-events: write
    with:
      environment: 'dev'
    secrets: inherit