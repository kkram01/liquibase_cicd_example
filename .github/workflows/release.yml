name: Release
on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  ci-local-vars:
    runs-on: ubuntu-latest
    outputs:
      environment: ${{ steps.local-vars.outputs.environment }}
    steps:
    - name: set local variables
      id: local-vars
      run: |
        if [[ ${{ github.event_name }} == release && ${{ github.event.action}} == published ]]; then
          echo "environment=prod" >>$GITHUB_OUTPUT
        else
          echo "environment=prod-plan" >>$GITHUB_OUTPUT
        fi
        echo
        cat $GITHUB_OUTPUT

  plan-production:
    name: Liquibase plan and Update
    needs: [ ci-local-vars ]
    uses: ./.github/workflows/liquibase-ci.yml
    secrets:
      URL: ${{ secrets.URL }}
      USERNAME: ${{ secrets.USERNAME }}
    with:
      environment: "prod-plan"
      WORKLOAD_IDENTITY_PROVIDER: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
      SERVICE_ACCOUNT: ${{ vars.SERVICE_ACCOUNT }}
      GOOGLE_CLOUD_PROJECT: ${{ vars.GOOGLE_CLOUD_PROJECT }}
      SQL_LOG_LEVEL: ${{ vars.SQL_LOG_LEVEL }}
      LOG_LEVEL: ${{ vars.LOG_LEVEL }}

  deploy-production:
    name: Liquibase plan and Update on production
    needs: [ci-local-vars]
    uses: ./.github/workflows/liquibase-release.yml
    secrets:
      URL: ${{ secrets.URL }}
      USERNAME: ${{ secrets.USERNAME }}
    with:
      environment: ${{ needs.ci-local-vars.outputs.environment }}
      WORKLOAD_IDENTITY_PROVIDER: ${{ vars.WORKLOAD_IDENTITY_PROVIDER }}
      SERVICE_ACCOUNT: ${{ vars.SERVICE_ACCOUNT }}
      GOOGLE_CLOUD_PROJECT : ${{ vars.GOOGLE_CLOUD_PROJECT }}
      SQL_LOG_LEVEL: ${{ vars.SQL_LOG_LEVEL }}
      LOG_LEVEL: ${{ vars.LOG_LEVEL }}
